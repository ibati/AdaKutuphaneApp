@model AdaKutuphaneApp.Models.Entity.tblYazarlar
@{
    ViewBag.Title = "YazarEkle";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Yazar Ekle</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Anasayfas</a></li>
                    <li class="breadcrumb-item active">Yazar Ekle</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <!-- left column -->
            <div class="col-md-6">
                <!-- general form elements -->
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Yazar Ekle</h3>
                    </div>
                    <!-- /.card-header -->
                    <!-- form start -->
                    <form id="validateform" method="post">
                        <div class="card-body">
                            <div class="form-group">
                                <label>Yazar Ad</label>
                                @Html.TextBoxFor(yazar => yazar.AD, new { @class = "form-control", @placeholder = "Yazar Adı" })
                                @Html.ValidationMessageFor(yazar => yazar.AD, "", new { @class = "text-xs text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Yazar Soyad</label>
                                @Html.TextBoxFor(yazar => yazar.SOYAD, new { @class = "form-control", @placeholder = "Yazar Soyadı" })
                                @Html.ValidationMessageFor(yazar => yazar.SOYAD, "", new { @class = "text-xs text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Detay</label>
                                @Html.TextAreaFor(yazar => yazar.DETAY, new { @class = "form-control" })
                            </div>

                        </div>
                        <!-- /.card-body -->

                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary">Kaydet</button>
                        </div>
                    </form>
                </div>
                <!-- /.card -->


            </div>
            <!--/.col (left) -->
        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
</section>
<!-- /.content -->

@section scripts {
    <script>
        $(function () {
            $('#validateform').validate({
                rules: {
                    AD: {
                        required: true,
                        minlength: 2 ,
                    },

                    SOYAD: {
                        required: true,
                        minlength: 2,
                    },

                },
                messages: {
                    AD: {
                        required: "Lütfen ad giriniz",
                        minlength: "Ad alanı en az 2 hane olmalıdır",
                    },

                    SOYAD: {
                        required: "Lütfen soyad giriniz",
                        minlength: "Soyad alanı en az 2 hane olmalıdır",

                    }
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        });
    </script>
}